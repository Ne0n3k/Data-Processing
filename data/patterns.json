{
  "Seq2": {
    "number of args": 2,
    "rules": [
      "arg0",
      "arg1",
      "Exist(arg0)",
      "ForAll((arg0) => Exist(arg1))",
      "ForAll(~((arg0) ^ (arg1)))"
    ]
  },
  "Seq3": {
    "number of args": 3,
    "rules": [
      "arg0",
      "arg2",
      "Exist(arg0)",
      "ForAll((arg0) => Exist(arg1))",
      "ForAll((arg1) => Exist(arg2))",
      "ForAll(~((arg0) ^ (arg1)))",
      "ForAll(~((arg0) ^ (arg2)))",
      "ForAll(~((arg1) ^ (arg2)))"
    ]
  },
  "Seq4": {
    "number of args": 4,
    "rules": [
      "arg0",
      "arg3",
      "Exist(arg0)",
      "ForAll((arg0) => Exist(arg1))",
      "ForAll((arg1) => Exist(arg2))",
      "ForAll((arg2) => Exist(arg3))",
      "ForAll(~((arg0) ^ (arg1)))",
      "ForAll(~((arg0) ^ (arg2)))",
      "ForAll(~((arg0) ^ (arg3)))",
      "ForAll(~((arg1) ^ (arg2)))",
      "ForAll(~((arg1) ^ (arg3)))",
      "ForAll(~((arg2) ^ (arg3)))"
    ]
  },
  "Seq5": {
    "number of args": 5,
    "rules": [
      "arg0",
      "arg4",
      "Exist(arg0)",
      "ForAll((arg0) => Exist(arg1))",
      "ForAll((arg1) => Exist(arg2))",
      "ForAll((arg2) => Exist(arg3))",
      "ForAll((arg3) => Exist(arg4))",
      "ForAll(~((arg0) ^ (arg1)))",
      "ForAll(~((arg0) ^ (arg2)))",
      "ForAll(~((arg0) ^ (arg3)))",
      "ForAll(~((arg0) ^ (arg4)))",
      "ForAll(~((arg1) ^ (arg2)))",
      "ForAll(~((arg1) ^ (arg3)))",
      "ForAll(~((arg1) ^ (arg4)))",
      "ForAll(~((arg2) ^ (arg3)))",
      "ForAll(~((arg2) ^ (arg4)))",
      "ForAll(~((arg3) ^ (arg4)))"
    ]
  },
  "Xor2": {
    "number of args": 4,
    "rules": [
      "arg0",
      "arg3",
      "Exist(arg0)",
      "ForAll((arg0) => ((Exist(arg1) ^ ~(Exist(arg2))) | (~(Exist(arg1)) ^ Exist(arg2))))",
      "ForAll(((arg1) | (arg2)) => Exist(arg3))",
      "ForAll(~((arg0) ^ (arg1)))",
      "ForAll(~((arg0) ^ (arg2)))",
      "ForAll(~((arg0) ^ (arg3)))",
      "ForAll(~((arg1) ^ (arg2)))",
      "ForAll(~((arg1) ^ (arg3)))",
      "ForAll(~((arg2) ^ (arg3)))"
    ]
  },
  "Xor3": {
    "number of args": 5,
    "rules": [
      "arg0",
      "arg4",
      "Exist(arg0)",
      "ForAll((arg0) => ((Exist(arg1) ^ ~(Exist(arg2)) ^ ~(Exist(arg3))) | ((~(Exist(arg1)) ^ Exist(arg2) ^ ~(Exist(arg3))) | (~(Exist(arg1)) ^ ~(Exist(arg2)) ^ Exist(arg3)))))",
      "ForAll(((arg1) | (arg2) | (arg3)) => Exist(arg4))",
      "ForAll(~((arg0) ^ (arg1)))",
      "ForAll(~((arg0) ^ (arg2)))",
      "ForAll(~((arg0) ^ (arg3)))",
      "ForAll(~((arg0) ^ (arg4)))",
      "ForAll(~((arg1) ^ (arg2)))",
      "ForAll(~((arg1) ^ (arg3)))",
      "ForAll(~((arg1) ^ (arg4)))",
      "ForAll(~((arg2) ^ (arg3)))",
      "ForAll(~((arg2) ^ (arg4)))",
      "ForAll(~((arg3) ^ (arg4)))"
    ]
  },
  "Xor4": {
    "number of args": 6,
    "rules": [
      "arg0",
      "arg5",
      "Exist(arg0)",
      "ForAll((arg0) => ((Exist(arg1) ^ ~(Exist(arg2)) ^ ~(Exist(arg3)) ^ ~(Exist(arg4))) | ((~(Exist(arg1)) ^ Exist(arg2) ^ ~(Exist(arg3)) ^ ~(Exist(arg4))) | ((~(Exist(arg1)) ^ ~(Exist(arg2)) ^ Exist(arg3) ^ ~(Exist(arg4))) | (~(Exist(arg1)) ^ ~(Exist(arg2)) ^ ~(Exist(arg3)) ^ Exist(arg4)))))",
      "ForAll(((arg1) | (arg2) | (arg3) | (arg4)) => Exist(arg5))",
      "ForAll(~((arg0) ^ (arg1)))",
      "ForAll(~((arg0) ^ (arg2)))",
      "ForAll(~((arg0) ^ (arg3)))",
      "ForAll(~((arg0) ^ (arg4)))",
      "ForAll(~((arg0) ^ (arg5)))",
      "ForAll(~((arg1) ^ (arg2)))",
      "ForAll(~((arg1) ^ (arg3)))",
      "ForAll(~((arg1) ^ (arg4)))",
      "ForAll(~((arg1) ^ (arg5)))",
      "ForAll(~((arg2) ^ (arg3)))",
      "ForAll(~((arg2) ^ (arg4)))",
      "ForAll(~((arg2) ^ (arg5)))",
      "ForAll(~((arg3) ^ (arg4)))",
      "ForAll(~((arg3) ^ (arg5)))",
      "ForAll(~((arg4) ^ (arg5)))"
    ]
  },
  "Xor5": {
    "number of args": 7,
    "rules": [
      "arg0",
      "arg6",
      "Exist(arg0)",
      "ForAll((arg0) => ((Exist(arg1) ^ ~(Exist(arg2)) ^ ~(Exist(arg3)) ^ ~(Exist(arg4)) ^ ~(Exist(arg5))) | ((~(Exist(arg1)) ^ Exist(arg2) ^ ~(Exist(arg3)) ^ ~(Exist(arg4)) ^ ~(Exist(arg5))) | ((~(Exist(arg1)) ^ ~(Exist(arg2)) ^ Exist(arg3) ^ ~(Exist(arg4)) ^ ~(Exist(arg5))) | ((~(Exist(arg1)) ^ ~(Exist(arg2)) ^ ~(Exist(arg3)) ^ Exist(arg4) ^ ~(Exist(arg5))) | (~(Exist(arg1)) ^ ~(Exist(arg2)) ^ ~(Exist(arg3)) ^ ~(Exist(arg4)) ^ Exist(arg5)))))))",
      "ForAll(((arg1) | (arg2) | (arg3) | (arg4) | (arg5)) => Exist(arg6))",
      "ForAll(~((arg0) ^ (arg1)))",
      "ForAll(~((arg0) ^ (arg2)))",
      "ForAll(~((arg0) ^ (arg3)))",
      "ForAll(~((arg0) ^ (arg4)))",
      "ForAll(~((arg0) ^ (arg5)))",
      "ForAll(~((arg0) ^ (arg6)))",
      "ForAll(~((arg1) ^ (arg2)))",
      "ForAll(~((arg1) ^ (arg3)))",
      "ForAll(~((arg1) ^ (arg4)))",
      "ForAll(~((arg1) ^ (arg5)))",
      "ForAll(~((arg1) ^ (arg6)))",
      "ForAll(~((arg2) ^ (arg3)))",
      "ForAll(~((arg2) ^ (arg4)))",
      "ForAll(~((arg2) ^ (arg5)))",
      "ForAll(~((arg2) ^ (arg6)))",
      "ForAll(~((arg3) ^ (arg4)))",
      "ForAll(~((arg3) ^ (arg5)))",
      "ForAll(~((arg3) ^ (arg6)))",
      "ForAll(~((arg4) ^ (arg5)))",
      "ForAll(~((arg4) ^ (arg6)))",
      "ForAll(~((arg5) ^ (arg6)))"
    ]
  },
  "Xor14": {
    "number of args": 16,
    "rules": [
      "arg0",
      "arg15",
      "Exist(arg0)",
      "ForAll((arg0) => ((Exist(arg1) ^ ~(Exist(arg2)) ^ ~(Exist(arg3)) ^ ~(Exist(arg4)) ^ ~(Exist(arg5)) ^ ~(Exist(arg6)) ^ ~(Exist(arg7)) ^ ~(Exist(arg8)) ^ ~(Exist(arg9)) ^ ~(Exist(arg10)) ^ ~(Exist(arg11)) ^ ~(Exist(arg12)) ^ ~(Exist(arg13)) ^ Exist(arg14))))",
      "ForAll((arg1) | (arg2) | (arg3) | (arg4) | (arg5) | (arg6) | (arg7) | (arg8) | (arg9) | (arg10) | (arg11) | (arg12) | (arg13) | (arg14) => Exist(arg15))",
      "ForAll(~((arg0) ^ (arg1)))",
      "ForAll(~((arg0) ^ (arg2)))",
      "ForAll(~((arg0) ^ (arg3)))",
      "ForAll(~((arg0) ^ (arg4)))",
      "ForAll(~((arg0) ^ (arg5)))",
      "ForAll(~((arg0) ^ (arg6)))",
      "ForAll(~((arg0) ^ (arg7)))",
      "ForAll(~((arg0) ^ (arg8)))",
      "ForAll(~((arg0) ^ (arg9)))",
      "ForAll(~((arg0) ^ (arg10)))",
      "ForAll(~((arg0) ^ (arg11)))",
      "ForAll(~((arg0) ^ (arg12)))",
      "ForAll(~((arg0) ^ (arg13)))",
      "ForAll(~((arg0) ^ (arg14)))",
      "ForAll(~((arg0) ^ (arg15)))",
      "ForAll(~((arg1) ^ (arg2)))",
      "ForAll(~((arg1) ^ (arg3)))",
      "ForAll(~((arg1) ^ (arg4)))",
      "ForAll(~((arg1) ^ (arg5)))",
      "ForAll(~((arg1) ^ (arg6)))",
      "ForAll(~((arg1) ^ (arg7)))",
      "ForAll(~((arg1) ^ (arg8)))",
      "ForAll(~((arg1) ^ (arg9)))",
      "ForAll(~((arg1) ^ (arg10)))",
      "ForAll(~((arg1) ^ (arg11)))",
      "ForAll(~((arg1) ^ (arg12)))",
      "ForAll(~((arg1) ^ (arg13)))",
      "ForAll(~((arg1) ^ (arg14)))",
      "ForAll(~((arg1) ^ (arg15)))",
      "ForAll(~((arg2) ^ (arg3)))",
      "ForAll(~((arg2) ^ (arg4)))",
      "ForAll(~((arg2) ^ (arg5)))",
      "ForAll(~((arg2) ^ (arg6)))",
      "ForAll(~((arg2) ^ (arg7)))",
      "ForAll(~((arg2) ^ (arg8)))",
      "ForAll(~((arg2) ^ (arg9)))",
      "ForAll(~((arg2) ^ (arg10)))",
      "ForAll(~((arg2) ^ (arg11)))",
      "ForAll(~((arg2) ^ (arg12)))",
      "ForAll(~((arg2) ^ (arg13)))",
      "ForAll(~((arg2) ^ (arg14)))",
      "ForAll(~((arg2) ^ (arg15)))",
      "ForAll(~((arg3) ^ (arg4)))",
      "ForAll(~((arg3) ^ (arg5)))",
      "ForAll(~((arg3) ^ (arg6)))",
      "ForAll(~((arg3) ^ (arg7)))",
      "ForAll(~((arg3) ^ (arg8)))",
      "ForAll(~((arg3) ^ (arg9)))",
      "ForAll(~((arg3) ^ (arg10)))",
      "ForAll(~((arg3) ^ (arg11)))",
      "ForAll(~((arg3) ^ (arg12)))",
      "ForAll(~((arg3) ^ (arg13)))",
      "ForAll(~((arg3) ^ (arg14)))",
      "ForAll(~((arg3) ^ (arg15)))",
      "ForAll(~((arg4) ^ (arg5)))",
      "ForAll(~((arg4) ^ (arg6)))",
      "ForAll(~((arg4) ^ (arg7)))",
      "ForAll(~((arg4) ^ (arg8)))",
      "ForAll(~((arg4) ^ (arg9)))",
      "ForAll(~((arg4) ^ (arg10)))",
      "ForAll(~((arg4) ^ (arg11)))",
      "ForAll(~((arg4) ^ (arg12)))",
      "ForAll(~((arg4) ^ (arg13)))",
      "ForAll(~((arg4) ^ (arg14)))",
      "ForAll(~((arg4) ^ (arg15)))",
      "ForAll(~((arg5) ^ (arg6)))",
      "ForAll(~((arg5) ^ (arg7)))",
      "ForAll(~((arg5) ^ (arg8)))",
      "ForAll(~((arg5) ^ (arg9)))",
      "ForAll(~((arg5) ^ (arg10)))",
      "ForAll(~((arg5) ^ (arg11)))",
      "ForAll(~((arg5) ^ (arg12)))",
      "ForAll(~((arg5) ^ (arg13)))",
      "ForAll(~((arg5) ^ (arg14)))",
      "ForAll(~((arg5) ^ (arg15)))",
      "ForAll(~((arg6) ^ (arg7)))",
      "ForAll(~((arg6) ^ (arg8)))",
      "ForAll(~((arg6) ^ (arg9)))",
      "ForAll(~((arg6) ^ (arg10)))",
      "ForAll(~((arg6) ^ (arg11)))",
      "ForAll(~((arg6) ^ (arg12)))",
      "ForAll(~((arg6) ^ (arg13)))",
      "ForAll(~((arg6) ^ (arg14)))",
      "ForAll(~((arg6) ^ (arg15)))",
      "ForAll(~((arg7) ^ (arg8)))",
      "ForAll(~((arg7) ^ (arg9)))",
      "ForAll(~((arg7) ^ (arg10)))",
      "ForAll(~((arg7) ^ (arg11)))",
      "ForAll(~((arg7) ^ (arg12)))",
      "ForAll(~((arg7) ^ (arg13)))",
      "ForAll(~((arg7) ^ (arg14)))",
      "ForAll(~((arg7) ^ (arg15)))",
      "ForAll(~((arg8) ^ (arg9)))",
      "ForAll(~((arg8) ^ (arg10)))",
      "ForAll(~((arg8) ^ (arg11)))",
      "ForAll(~((arg8) ^ (arg12)))",
      "ForAll(~((arg8) ^ (arg13)))",
      "ForAll(~((arg8) ^ (arg14)))",
      "ForAll(~((arg8) ^ (arg15)))",
      "ForAll(~((arg9) ^ (arg10)))",
      "ForAll(~((arg9) ^ (arg11)))",
      "ForAll(~((arg9) ^ (arg12)))",
      "ForAll(~((arg9) ^ (arg13)))",
      "ForAll(~((arg9) ^ (arg14)))",
      "ForAll(~((arg9) ^ (arg15)))",
      "ForAll(~((arg10) ^ (arg11)))",
      "ForAll(~((arg10) ^ (arg12)))",
      "ForAll(~((arg10) ^ (arg13)))",
      "ForAll(~((arg10) ^ (arg14)))",
      "ForAll(~((arg10) ^ (arg15)))",
      "ForAll(~((arg11) ^ (arg12)))",
      "ForAll(~((arg11) ^ (arg13)))",
      "ForAll(~((arg11) ^ (arg14)))",
      "ForAll(~((arg11) ^ (arg15)))",
      "ForAll(~((arg12) ^ (arg13)))",
      "ForAll(~((arg12) ^ (arg14)))",
      "ForAll(~((arg12) ^ (arg15)))",
      "ForAll(~((arg13) ^ (arg14)))",
      "ForAll(~((arg13) ^ (arg15)))",
      "ForAll(~((arg14) ^ (arg15)))"
    ]
  },
  "And2": {
    "number of args": 4,
    "rules": [
      "arg0",
      "arg3",
      "Exist(arg0)",
      "ForAll((arg0) => (Exist(arg1) ^ Exist(arg2)))",
      "ForAll((arg1) => Exist(arg3))",
      "ForAll((arg2) => Exist(arg3))",
      "ForAll(~((arg0) ^ ((arg1) | (arg2))))",
      "ForAll(~(((arg1) | (arg2)) ^ (arg3)))"
    ]
  },
  "And3": {
    "number of args": 5,
    "rules": [
      "arg0",
      "arg4",
      "Exist(arg0)",
      "ForAll((arg0) => (Exist(arg1) ^ Exist(arg2) ^ Exist(arg3)))",
      "ForAll((arg1) => Exist(arg4))",
      "ForAll((arg2) => Exist(arg4))",
      "ForAll((arg3) => Exist(arg4))",
      "ForAll(~((arg0) ^ ((arg1) | (arg2) | (arg3))))",
      "ForAll(~(((arg1) | (arg2) | (arg3)) ^ (arg4)))"
    ]
  },
  "And4": {
    "number of args": 6,
    "rules": [
      "arg0",
      "arg5",
      "Exist(arg0)",
      "ForAll((arg0) => (Exist(arg1) ^ Exist(arg2) ^ Exist(arg3) ^ Exist(arg4)))",
      "ForAll((arg1) => Exist(arg5))",
      "ForAll((arg2) => Exist(arg5))",
      "ForAll((arg3) => Exist(arg5))",
      "ForAll((arg4) => Exist(arg5))",
      "ForAll(~((arg0) ^ ((arg1) | (arg2) | (arg3) | (arg4))))",
      "ForAll(~(((arg1) | (arg2) | (arg3) | (arg4)) ^ (arg5)))"
    ]
  },
  "Loop": {
    "number of args": 3,
    "rules": [
      "arg0",
      "arg1",
      "Exist(arg0)",
      "ForAll((arg0) => Exist(arg1))",
      "ForAll((arg1) => ((Exist(arg2) ^ Exist(arg1)) | (~(Exist(arg2)))))",
      "ForAll((arg2) => Exist(arg1))",
      "ForAll(~((arg0) ^ (arg1)))",
      "ForAll(~((arg0) ^ (arg2)))",
      "ForAll(~((arg1) ^ (arg2)))"
    ]
  },
  "Loop2": {
    "number of args": 4,
    "rules": [
      "arg0",
      "arg3",
      "Exist(arg0)",
      "ForAll((arg0) => Exist(arg1))",
      "ForAll((arg1) => ((Exist(arg2) ^ Exist(arg1)) | (~(Exist(arg2)))))",
      "ForAll((arg3) => Exist(arg1))",
      "ForAll(~((arg0) ^ (arg1)))",
      "ForAll(~((arg0) ^ (arg2)))",
      "ForAll(~((arg0) ^ (arg3)))",
      "ForAll(~((arg1) ^ (arg2)))",
      "ForAll(~((arg1) ^ (arg3)))",
      "ForAll(~((arg2) ^ (arg3)))"
    ]
  },
  "Loop3": {
    "number of args": 5,
    "rules": [
      "arg0",
      "arg4",
      "Exist(arg0)",
      "ForAll((arg0) => Exist(arg1))",
      "ForAll((arg1) => Exist(arg2))",
      "ForAll((arg2) => ((Exist(arg3) ^ Exist(arg1)) | (~(Exist(arg3)))))",
      "ForAll((arg4) => Exist(arg1))",
      "ForAll(~((arg0) ^ (arg1)))",
      "ForAll(~((arg0) ^ (arg2)))",
      "ForAll(~((arg0) ^ (arg3)))",
      "ForAll(~((arg0) ^ (arg4)))",
      "ForAll(~((arg1) ^ (arg2)))",
      "ForAll(~((arg1) ^ (arg3)))",
      "ForAll(~((arg1) ^ (arg4)))",
      "ForAll(~((arg2) ^ (arg3)))",
      "ForAll(~((arg2) ^ (arg4)))",
      "ForAll(~((arg3) ^ (arg4)))"
    ]
  },
  "Loop4": {
    "number of args": 6,
    "rules": [
      "arg0",
      "arg5",
      "Exist(arg0)",
      "ForAll((arg0) => Exist(arg1))",
      "ForAll((arg1) => Exist(arg2))",
      "ForAll((arg2) => Exist(arg3))",
      "ForAll((arg3) => ((Exist(arg4) ^ Exist(arg1)) | (~(Exist(arg4)))))",
      "ForAll((arg5) => Exist(arg1))",
      "ForAll(~((arg0) ^ (arg1)))",
      "ForAll(~((arg0) ^ (arg2)))",
      "ForAll(~((arg0) ^ (arg3)))",
      "ForAll(~((arg0) ^ (arg4)))",
      "ForAll(~((arg0) ^ (arg5)))",
      "ForAll(~((arg1) ^ (arg2)))",
      "ForAll(~((arg1) ^ (arg3)))",
      "ForAll(~((arg1) ^ (arg4)))",
      "ForAll(~((arg1) ^ (arg5)))",
      "ForAll(~((arg2) ^ (arg3)))",
      "ForAll(~((arg2) ^ (arg4)))",
      "ForAll(~((arg2) ^ (arg5)))",
      "ForAll(~((arg3) ^ (arg4)))",
      "ForAll(~((arg3) ^ (arg5)))",
      "ForAll(~((arg4) ^ (arg5)))"
    ]
  }
}
